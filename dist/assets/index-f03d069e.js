(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();async function u(e){console.log("Fetching: "+e);const t=await fetch(e);console.log(t.status);const n=await t.json();return console.log(n),n}async function d(e,t=null){const n={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};console.log("Posting: "+e+" Options: "+JSON.stringify(n));const s=await fetch(e,n);console.log(s.status);const o=await s.json();return s.status===400?s.status:(console.log(o),o)}const i={nickname:"",score:0,timeRemaining:0,timer:null,questions:[],answers:[],highScoresList:[],totalTime:0,async startQuiz(e){this.nickname=e,this.loadHighScoreFromWebStorage(),document.querySelector("#start-screen").style.display="none",document.querySelector("#quiz-screen").style.display="block",await this.fetchQuestion("https://courselab.lnu.se/quiz/question/1"),this.startTimer()},async restartQuiz(){this.score=0,this.timeRemaining=0,this.timer=null,this.questions=[],this.answers=[],this.totalTime=0,document.querySelector("#start-screen").style.display="block",document.querySelector("#quiz-screen").style.display="none",document.querySelector("#end-screen").style.display="none",document.querySelector("#answer-form").style.display="none",document.querySelector("#answer-input").style.display="none",document.querySelector("#answer-input").value="",document.querySelector("#answer-button").textContent="Answer",document.querySelector("#answer-button").disabled=!1,document.querySelector("#answer-button").style.display="block",document.querySelector("#retry-button").style.display="none",document.querySelector("#score").textContent="0",document.querySelector("#time-remaining").textContent="0",document.querySelector("#total-time").textContent="0",document.querySelector("#nickname-input").value="",document.querySelector("#nickname").textContent=""},startTimer(){this.timeRemaining=10,this.updateTimer(),this.timer=setInterval(()=>{this.timeRemaining--,this.totalTime++;try{this.updateTimer()}catch(e){if(e instanceof TypeError)console.error("Error Updating Timer");else throw e}this.timeRemaining===0&&(console.log("Ending quiz, time up"),this.endQuiz("Time is up!"))},1e3)},updatePage(){if(this.questions.length===0)throw new TypeError("The questions array is empty");const e=this.questions[this.questions.length-1];document.querySelector("#question").textContent=e.question,document.querySelector("#score").textContent=`Score: ${this.score}`,document.querySelector("#answer-form").style.display="flex",e.type==="alternatives"?(console.log("question has alternatives"),document.querySelector("#answer-input").style.display="none",document.querySelector("#answer-alternatives").style.display="flex",document.querySelector("#answer-alternatives").innerHTML="",Object.entries(e.alternatives).forEach(t=>{const n=document.createElement("div");n.id=t[0],n.style.display="flex",n.style.alignItems="center",n.style.flexDirection="column";const s=document.createElement("input");s.type="radio",s.id=t[0],s.name="answer",s.style.margin="0";const o=document.createElement("label");o.style.marginBottom="10px",o.htmlFor=t[0],o.textContent=t[1],o.style.flex="2",o.style.textAlign="left",n.appendChild(s),n.appendChild(o),document.querySelector("#answer-alternatives").appendChild(n)})):(console.log("question has input"),document.querySelector("#answer-input").style.display="block",document.querySelector("#answer-alternatives").style.display="none")},updateTimer(){document.querySelector("#time-remaining").textContent=`Time remaining: ${this.timeRemaining}s`},async handleAnswer(){if(clearInterval(this.timer),this.questions[this.questions.length-1].type==="alternatives"){const e=document.querySelector('input[name="answer"]:checked').id;console.log("Checking answer: ",e),await this.checkAnswer(e)}else{const e=document.querySelector("#answer-input").value;console.log("Checking answer: ",e),await this.checkAnswer(e),document.querySelector("#answer-input").value=""}},async checkAnswer(e){const t={answer:e},n=await this.postReply(this.questions[this.questions.length-1].nextURL,t);await n.nextURL?(this.score++,console.log("fetching next question "+n.nextURL),await this.fetchQuestion(n.nextURL),this.startTimer()):this.endQuiz("Congratulations! You won!")},async postReply(e,t){try{const n=await d(e,t);if(n===400){console.log("Bad request"),this.endQuiz("Wrong answer!");return}return this.answers.push(await n),console.log([...this.answers]),n}catch(n){console.error(n)}},async fetchQuestion(e){try{const t=await u(e);return t.alternatives?(console.log("question has alternatives"),t.type="alternatives"):(console.log("question has input"),t.type="input"),this.questions.push(t),this.updatePage(),t}catch(t){console.error(t)}},endQuiz(e="Game over!"){e==="Congratulations! You won!"?(this.highScoresList.push({nickname:this.nickname,time:this.totalTime}),this.highScoresList.sort((t,n)=>t.time-n.time),document.querySelector("#high-score-list").innerHTML="",this.highScoresList.forEach(t=>{const n=document.createElement("li");n.textContent=`${t.nickname} - ${t.time}s`,document.querySelector("#high-score-list").appendChild(n)}),document.querySelector("#high-score-list").style.display="block",document.querySelector("#time-remaining").textContent="Leaderboard",document.querySelector("#retry-button").style.display="block",clearInterval(this.timer),document.querySelector("#question").textContent=` ${e} Your time was ${this.totalTime} seconds.`,document.querySelector("#answer-form").style.display="none",this.saveHighScoreToWebStorage()):(clearInterval(this.timer),document.querySelector("#question").textContent=` ${e} Your score was ${this.score}.`,document.querySelector("#answer-form").style.display="none",document.querySelector("#retry-button").style.display="block")},saveHighScoreToWebStorage(){localStorage.setItem("highScores",JSON.stringify(this.highScoresList))},loadHighScoreFromWebStorage(){const e=JSON.parse(localStorage.getItem("highScores"));e&&(this.highScoresList=e)}},a=document.querySelector("#start-button"),l=document.querySelector("#nickname-input");a.addEventListener("click",async e=>{e.preventDefault();const t=l.value;t&&await i.startQuiz(t)});l.addEventListener("keyup",async e=>{e.preventDefault(),e.keyCode===13&&a.click()});document.querySelector("#answer-button").addEventListener("click",async e=>{if(e.preventDefault(),document.querySelector("#answer-input").style.display==="none"){const t=document.querySelector('input[name="answer"]:checked').id;console.log("Handling answer :",t),await i.handleAnswer(t)}else{const t=document.querySelector("#answer-input").value;t&&(console.log("Handling answer :",t),await i.handleAnswer(t))}});document.querySelector("#retry-button").addEventListener("click",async e=>{e.preventDefault(),await i.restartQuiz()});
